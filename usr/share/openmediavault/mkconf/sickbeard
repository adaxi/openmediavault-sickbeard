#!/bin/sh
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 2
# @author    Gerik Bonaert <dev@adaxisoft.be>
# @copyright Copyright (c) 2013 Gerik Bonaert
#
# Sickbeard for OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_SICKBEARD_RUN_AS=${OMV_SICKBEARD_RUN_AS:-"essencia"}
OMV_SICKBEARD_PORT=${OMV_SICKBEARD_PORT:-"8081"}
OMV_SICKBEARD_INSTALL_DIR=${OMV_SICKBEARD_INSTALL_DIR:-"/usr/share/sickbeard"}
OMV_SICKBEARD_CONFIG_DIR=${OMV_SICKBEARD_CONFIG_DIR:-"/etc/sickbeard"}
OMV_SICKBEARD_CONFIG_FILE=${OMV_SICKBEARD_CONFIG_FILE:-"${OMV_SICKBEARD_CONFIG_DIR}/sickbeard.ini"}
OMV_SICKBEARD_DATA_DIR=${OMV_SICKBEARD_DATA_DIR:-"/var/lib/sickbeard"}
OMV_SICKBEARD_LOG_DIR=${OMV_SICKBEARD_LOG_DIR:-"/var/log/sickbeard"}
OMV_SICKBEARD_DEFAULT_FILE=${OMV_SICKBEARD_DEFAULT_FILE:-"/etc/default/sickbeard"}
OMV_SICKBEARD_WEB_ROOT=${OMV_SICKBEARD_WEB_ROOT:-"/sickbeard"}
OMV_SICKBEARD_AUTOPROCESS_FILE=${OMV_SICKBEARD_AUTOPROCESS_FILE:-"/usr/share/sickbeard/autoProcessTV/autoProcessTV.cfg"}
OMV_SICKBEARD_NGINX_SITE=${OMV_SICKBEARD_NGINX_SITE:-"/etc/nginx/openmediavault-webgui.d/sickbeard-proxy.conf"}

for DIR in ${OMV_SICKBEARD_CONFIG_DIR} ${OMV_SICKBEARD_DATA_DIR} ${OMV_SICKBEARD_LOG_DIR}; do
	mkdir -p ${DIR};
done

cat <<EOF > ${OMV_SICKBEARD_DEFAULT_FILE}
# This file is sourced by /etc/init.d/sickbeard
#
# When sickbeard is started using the init script
# is started under the account of $USER, as set below.
#
# Each setting is marked either "required" or "optional";
# leaving any required setting unconfigured will cause
# the service to not start.

# [required] set path where sickbeard is installed:
APP_PATH=${OMV_SICKBEARD_INSTALL_DIR}

# [optional] change to 1 to enable daemon
ENABLE_DAEMON=1

# [required] user or uid of account to run the program as:
RUN_AS=${OMV_SICKBEARD_RUN_AS}

# [optional] change to 1 to enable updating from webinterface
# this changes ownership of /opt/sickbeard to user set @ RUN_AS=
WEB_UPDATE=1

# [optional] full path to the configuration file of your choice;
# otherwise, the default location (~/.sickbeard) is used:
CONFIG=${OMV_SICKBEARD_CONFIG_FILE}

# [optional] full path to the folder to store data (databases/thumbs) in;
# otherwise, the default location (~/.sickbeard) is used:
DATADIR=${OMV_SICKBEARD_DATA_DIR}

# [optional] port number to listen on:
PORT=${OMV_SICKBEARD_PORT}

# [optional] full path for the pidfile
# otherwise, the default location /var/run/sickbeard/sickbeard.pid is used:
PID_FILE=
EOF

for DIR in ${OMV_SICKBEARD_CONFIG_DIR} ${OMV_SICKBEARD_DATA_DIR} ${OMV_SICKBEARD_LOG_DIR}; do
    chown ${OMV_SICKBEARD_RUN_AS} ${DIR} -R
done
  
###
# autoProcessTV.cfg
###
cat <<EOF > ${OMV_SICKBEARD_AUTOPROCESS_FILE}
[SickBeard]
host=localhost
port=${OMV_SICKBEARD_PORT}
username=
password=
web_root=${OMV_SICKBEARD_WEB_ROOT}
ssl=0
EOF

###
# We need the configuration to exist to change the web_root.
# In case the configuration does not exist we create it by
# starting sickbeard and stopping it.
###
if [ ! -f ${OMV_SICKBEARD_CONFIG_FILE} ]; then
    service sickbeard start 
    sleep 3
    service sickbeard stop 
fi

###
# Alter configuration file to set web_root.
###
if [ -f ${OMV_SICKBEARD_CONFIG_FILE} ]; then
    sed -i "s:web_root.*:web_root = ${OMV_SICKBEARD_WEB_ROOT}:" ${OMV_SICKBEARD_CONFIG_FILE}
    chown ${OMV_SICKBEARD_RUN_AS} ${FILE}
fi


###
# Handle nginx proxy for sickbeard
###
if [ "$(omv_config_get "//services/sickbeard/enable")" = "1" ]; then
    
    cat <<EOF > ${OMV_SICKBEARD_NGINX_SITE}
location ${OMV_SICKBEARD_WEB_ROOT}/ {
    proxy_pass http://localhost:${OMV_SICKBEARD_PORT}${OMV_SICKBEARD_WEB_ROOT}/;
}
EOF

else

    rm ${OMV_SICKBEARD_NGINX_SITE}

fi

service nginx reload
